{
    "name": "@tsdiapi/jwt-auth",
    "description": "JWT Authentication Plugin",
    "variables": [
        {
            "name": "JWT_SECRET_KEY",
            "type": "string",
            "default": "",
            "configurable": true,
            "description": "The secret key used for signing JWT tokens",
            "inquirer": {
                "type": "input",
                "message": "Enter your JWT secret key:"
            },
            "validate": {
                "type": "string",
                "minLength": 10,
                "errorMessage": "JWT secret key must be at least 10 characters long."
            }
        },
        {
            "name": "JWT_EXPIRATION_TIME",
            "type": "number",
            "default": 43200,
            "configurable": true,
            "description": "JWT expiration time in minutes (default: 30 days)",
            "inquirer": {
                "type": "number",
                "message": "Enter your JWT expiration time in minutes:"
            },
            "validate": {
                "type": "integer",
                "minimum": 1,
                "errorMessage": "Expiration time must be a positive number."
            },
            "transform": "x * 60"
        }
    ],
    "generators": [
        {
            "name": "feature",
            "description": "Generate a auth feature",
            "files": [
                {
                    "source": "generators/feature/*.*",
                    "destination": "{{name}}",
                    "overwrite": false,
                    "isHandlebarsTemplate": true
                }
            ],
            "postMessages": [
                "âœ… Feature {{name}} created successfully!"
            ],
            "fileModifications": [
                {
                    "path": "prisma/schema.prisma",
                    "mode": "append",
                    "match": "(m|M)odel\\s+User\\s*{",
                    "expected": false,
                    "content": "model User {\n  id          String  @id @default(cuid())\n  email       String? @unique\n  phoneNumber String? @unique\n\n  isDeleted   Boolean   @default(false)\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  deletedAt   DateTime?\n}\n"
                },
                {
                    "path": "prisma/schema.prisma",
                    "mode": "append",
                    "match": "(m|M)odel\\s+Session\\s*{",
                    "expected": false,
                    "content": "model Session {\n  id          String    @id @default(cuid())\n  email       String?\n  phoneNumber String?\n  code        String\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  deletedAt   DateTime?\n  isDeleted   Boolean   @default(false)\n}\n"
                }
            ],
            "afterGenerate": "npx prisma generate",
            "requiredPackages": [
                "@prisma/client",
                "prisma"
            ],
            "requiredPaths": [
                "prisma/schema.prisma"
            ]
        }
    ]
}